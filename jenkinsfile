pipeline {
    agent any

    environment {
            DOCKER_REGISTRY_CREDENTIALS = credentials('docker') // This assumes you've set up Jenkins credentials for your Docker registry
            DOCKER_IMAGE_NAME = 'ganjivasu/spring-boot-demo:latest'
            REMOTE_SERVER_USERNAME = 'ubuntu'
            REMOTE_SERVER_ADDRESS = '54.208.227.207'
            CONTAINER_PORT = 8080
            HOST_PORT = 8080
        }
    
    stages {
        
        stage('Build') {
            steps {
                // Build your Spring Boot application
                dir('csc') {
                sh "mvn clean install" // Assuming you're using Maven for your build
                }
            }
        }

        stage('Docker Build and Push') {
                    steps {
                        // Build Docker image
                        script {
                            docker.build(env.DOCKER_IMAGE_NAME)
                                docker.withRegistry('', "docker") {
                                    // Push Docker image to registry
                                    docker.image(env.DOCKER_IMAGE_NAME).push()
                                }
                            }
                    }
                }
        
        stage('Deploy') {
                    steps {
                        // SSH into the target EC2 instance and pull the Docker image
                        script {
                            echo "------------------- pull started ---------------------"

                            sshagent(credentials: ['ec2-spring']) {
                            withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'DOCKER_REGISTRY_CREDENTIALS_PSW', usernameVariable: 'DOCKER_REGISTRY_CREDENTIALS')]) {
                            sh "ssh -o StrictHostKeyChecking=no ${env.REMOTE_SERVER_USERNAME}@${env.REMOTE_SERVER_ADDRESS} 'docker login -u ${env.DOCKER_REGISTRY_CREDENTIALS} -p ${env.DOCKER_REGISTRY_CREDENTIALS_PSW} && docker pull ${env.DOCKER_IMAGE_NAME}'"
                            }
                        }

                           // sshagent(credentials: ['ec2-spring']) {
                           // withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'DOCKER_REGISTRY_CREDENTIALS', passwordVariable: 'DOCKER_REGISTRY_CREDENTIALS_PSW')]) {
                           // sh "ssh -o StrictHostKeyChecking=no ${env.REMOTE_SERVER_USERNAME}@${env.REMOTE_SERVER_ADDRESS} 'docker login -u ${env.DOCKER_REGISTRY_CREDENTIALS} -p ${env.DOCKER_REGISTRY_CREDENTIALS_PSW} && docker pull ${env.DOCKER_IMAGE_NAME}'"

                            echo "------------------- pull success ---------------------"
                            sh "ssh -o StrictHostKeyChecking=no ${env.REMOTE_SERVER_USERNAME}@${env.REMOTE_SERVER_ADDRESS} 'docker run -d -p 8080:9000 ${env.DOCKER_IMAGE_NAME}'"
                            echo "------------------- Running --------------------------"
                           // }
                       // }

                    }
              }
        }
    }
    post {
            always {
                echo "hello"
                script {
                    withGitHubChecks {
                        publishChecks {
                            check(name: 'Jenkins Pipeline', status: currentBuild.currentResult, conclusion: 'success')
                        }
                    }
                }
            }
        }
}





